Bulkheading
Tiring a ship metaphor
23 Jan 2015
Tags: Bulkheading,

Matthew Mayer
Consultant Developer, DualSpark
matthew@dualspark.com
http://dualspark.com
@motoblag

* Slides available on GitHub

https://github.com/matthewkmayer/talks

- the "k" is important in the URL: Look for a bunch of Golang projects and a shameful .NET one.
- *bulkheading-lokki* directory

* Who am I?

- Jack of all trades
- Written, implemented and maintained microservices in the cloud
- Super keen on agile software development
- Obligatory "DevOps fan" bullet point

* What?

- What's a bulkhead?
- Why do I want one in my system?
- Why do I want *lots* in my system?
- Implementing them, from small to large scale
- Show they work, or: Breakin' things.

* What's a bulkhead?

.image bulkheads.jpg

* What's a bulkhead in software?

A construct to prevent cascading failures.

One function or method failing or being slow shouldn't take down your entire application or system.

* Why do I want one in my system?

Bend, don't break.

Keep system responsive.

* Why do I want *lots* in my system?

By composing data from many sources, the system can still be used if some are not working at 100%.  Graceful degredation is the key.

* Implementing them, from small to large scale

* Function/method level

https://gobyexample.com/timeouts

* Function/method level expanded

Let's use Netflix's hard work:

.image hystrix.png

* Architectural level

- *Microservices*
- Load balancers with health checks
- Split servers across datacenters - the cloud has your back

* Show they work, or: Breakin' things.

*TEST* *IT*

* Show they work, or: Breakin' things.

Manual monkeys: Failure Fridays.  Introduce failure manually: kick over a server, use firewall rules to introduce latency, etc...

* Show they work, or: Breakin' things.

Automate with the Simian Army

.image Netflix-Simian-Army.png

* Warnings

- Don't let perfect be the enemy of good.  One bulkhead now is better than many sometime in the future.
- Don't gold plate: too many bulkheads cost code complexity and performance.  Ask if adding more serves the business needs.

* What? (revisited)

- What's a bulkhead? *✓*
- Why do I want one in my system? *✓*
- Why do I want *lots* in my system? *✓*
- Implementing them, from small to large scale *✓*
- Show they work, or: Breakin' things. *✓*


* Questions, comments

* BONUS SLIDE

DualSpark is hiring.  Tackle large scope, interesting problems by helping customers migrate to AWS.

Interested? Let's talk, here or via email.
